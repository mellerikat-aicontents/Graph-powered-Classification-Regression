## 외부에서 데이터 가져오기 / 결과 저장하는 경우 해당 위치에 지정
external_path:
    - load_train_data: /ssd_data/seongwoo_ssd/projects/alov2/sample_data/gcr_train/df_big_table_with_org.csv
    - load_inference_data:
    - save_train_artifacts:
    - save_inference_artifacts:
 
## 실험에 필요한 파라미터를 설정함
## - 해당 위치에서 삭제되면, code 의 default 로 실행
user_parameters:
    - train_pipeline:
        - step: input  ## 필수
          args:
            - input_path:
              x_columns: Lead_No,Budget_indexing,Business_Unit,Company_Account,Created_Date,Job_indexing,Lead_Channel_Type_indexing,Processed_Needs,Product_Category,Region,Subsidiary,Timeline_indexing,Title_indexing,Vertical_Level_1,customer_type,historical_existing_cnt,historical_total_cnt,lead_desc_length,historical_existing_cnt_original,historical_total_cnt_original,lead_desc_length_original,FLAG_TRAIN_INFERENCE
              use_all_x: True
              y_column: LABEL_TRAIN_INFERENCE #TRAIN_LABEL" #label"
              groupkey_columns:
              drop_columns:
              time_column:

        - step: graph ## 필수
          args:
            - output_path: /home/seongwoo.kong/ssd/projects/alov2/sample_data/ # embedding_result save path
              inference_file_name: /home/seongwoo.kong/ssd/projects/alov2/sample_data/inference.csv
            
            # User Settings
              graph_type: radial          # radial / relational
              train_inference_label_column: FLAG_TRAIN_INFERENCE
              drop_columns: [historical_existing_cnt_original,historical_total_cnt_original,lead_desc_length_original,FLAG_TRAIN_INFERENCE,LABEL_TRAIN_INFERENCE]             # 임베딩 제외 컬럼 (미입력시 전체 데이터 사용)
              embedding_column: Lead_No            # 임베딩 출력 컬럼 (미입력시 타겟 컬럼과 동일)
              dimension: 128
              num_epochs: 1
              workers: 1
              num_partitions: 1
            
            # graph_type을 normal(방사형)으로 설정한 경우, 중심 노드 지정 필수
              center_node_column: Lead_No                    # 중심 노드 컬럼명 (미입력시 첫번째 컬럼 대상 임베딩)

            # Advanced Settings (Graph structure)
              extra_columns_for_ml: [historical_existing_cnt_original]
              custom_connection: [[Timeline_indexing, Title_indexing, True]]           # connection_tup = [(lhs, rhs, rename_boolean)] , if rename_boolean=True -> change lhs name to rhs name
          
        - step: train ## 필수
          args:
            - model_type: classification ## supproted list: classification, regression
              evaluation_metric: accuracy ## classification: accuracy, precision, recall, f1-score
              shap_ratio: 0.01
              evaluation_report: False   ## True, False (speed-up) 
   
#    - inference_pipeline:
#        - step: input  ## 필수
#          args:
#            - input_path:
#              x_columns: Count,Converted Torque,angle_min,angle_mean,angle_median,angle_std,angle_max,torque_min,torque_mean,torque_median,torque_std,torque_max
#              use_all_x: True
#              y_column: #TRAIN_LABEL" #label"
#              groupkey_columns:
#              drop_columns:
#              time_column:
#        - step: inference ## 필수
#          args:
#            - model_type: classification
   
## asset 의 설치 정보를 기록       
asset_source:
    - train_pipeline:
        - step: input
          source:  ## git / local 지원
            code: http://mod.lge.com/hub/smartdata/ml-framework/alov2-module/input.git
            # code: local
            branch: tsc_beta
            requirements:
              - pandas==3.4
        - step: graph
          source:
            code: http://mod.lge.com/hub/smartdata/aiplatform/module/graph_db.git
            # code: local
            branch: develop
            requirements:
              - torch==2.0.0
        
        - step: train
          source:
            code: http://mod.lge.com/hub/smartdata/ml-framework/alov2-module/train.git
            # code: local
            branch: tsc_beta
            requirements:
              - pandas==3.4
              
#    - inference_pipeline:
#        - step: input
#          source:  ## git / local 지원
#            code: http://mod.lge.com/hub/smartdata/ml-framework/alov2-module/input.git
#            # code: local
#            branch: tsc_beta
#            requirements:
#                - pandas==3.4
#        - step: inference
#          source:
#            code: http://mod.lge.com/hub/smartdata/ml-framework/alov2-module/inference.git
#            # code: local
#            branch: tsc_beta
#            requirements:
#                - pandas==3.4
     
control:
    ## 1. 패키지 설치 및 asset 존재 여부를 실험 시마다 체크할지, 한번만 할지 결정
    - check_asset_source: once ## once, every
    ## 2. 생성된 artifacts 를 backup 할지를 결정 True/False
    - backup_artifacts: True
    ## 3. pipeline 로그를 backup 할지를 결정 True/False
    - backup_log: True
    ## 4. 저장 공간 사이즈를 결정 (단위 MB)
    - backup_size: 1000
 
    ## 5. Asset 사이 데이터 전달 방법으로 memory, file 를 지원
    - interface_mode: memory